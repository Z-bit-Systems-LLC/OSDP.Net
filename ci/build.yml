steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 8 SDK'
    inputs:
      packageType: 'sdk'
      version: '8.x'
      
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: 'test'
      nobuild: true
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration)'
      
  - task: CmdLine@2
    displayName: 'Install ReSharper Tools'
    inputs:
      script: 'dotnet tool install -g JetBrains.ReSharper.GlobalTools --arch arm64'
      
  - task: CmdLine@2
    displayName: 'Perform code inspection'
    inputs:
      script: 'jb inspectcode OSDP.Net.sln -o=$(Build.ArtifactStagingDirectory)/Resharper.sarif'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifactName: CodeAnalysisLogs

  - task: PowerShell@2
    displayName: 'Check inspection results and fail if needed'
    inputs:
      targetType: 'inline'
      script: |
        $sarifPath = "$(Build.ArtifactStagingDirectory)/Resharper.sarif"
        $sarif = Get-Content $sarifPath | ConvertFrom-Json
        
        $errorCount = 0
        $warningCount = 0
        
        foreach ($run in $sarif.runs) {
            if ($run.results) {
                foreach ($result in $run.results) {
                    if ($result.level -eq "error") {
                        $errorCount++
                    } elseif ($result.level -eq "warning") {
                        $warningCount++
                    }
                }
            }
        }
        
        Write-Host "Found $errorCount errors and $warningCount warnings"
  
        # Fail on both errors and warnings
        if ($errorCount -gt 0 -or $warningCount -gt 0) {
            Write-Host "##vso[task.logissue type=error]Code inspection found $errorCount errors and $warningCount warnings"
            exit 1
        }
